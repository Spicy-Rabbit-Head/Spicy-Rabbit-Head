{
  "name": "tag.scss",
  "type": "registry:style",
  "files": [
    {
      "target": "style/tag.scss",
      "content": "@use 'sass:color';\r\n@use 'sass:map';\r\n\r\n@use './shared' as *;\r\n@use './design' as *;\r\n\r\n// $types: primary info success error warning;\r\n\r\n$tag: () !default;\r\n$tag: map.merge(\r\n  (\r\n    color: value('content-color-base'),\r\n    color-disabled: value('content-color-disabled'),\r\n    bg-color: value('fill-color-background'),\r\n    bg-color-disabled: value('fill-color-background'),\r\n    b-color: value('border-color-base'),\r\n    b-color-disabled: value('border-color-light-2'),\r\n    v-padding: 0,\r\n    h-padding: 8px,\r\n    radius: value('radius-base'),\r\n    series-span: 4px,\r\n    small-font-size: value('font-size-secondary'),\r\n    default-font-size: value('font-size-base'),\r\n    large-font-size: value('font-size-primary'),\r\n    close-color: value('content-color-secondary'),\r\n    d-color: value('border-color-light-1')\r\n  ),\r\n  $tag\r\n);\r\n\r\n.#{$namespace}-tag {\r\n  &-vars {\r\n    @include define-preset-values('tag', $tag);\r\n  }\r\n\r\n  @mixin define-tag-style($style-map) {\r\n    @include define-preset-style('tag', $style-map);\r\n  }\r\n\r\n  @include basis {\r\n    position: relative;\r\n    display: inline-flex;\r\n    font-size: value('tag-default-font-size');\r\n    color: value('tag-color');\r\n    white-space: nowrap;\r\n    transition: value('transition-color');\r\n  }\r\n\r\n  $radius: value('tag-radius');\r\n\r\n  & + & {\r\n    margin-inline-start: value('tag-series-span');\r\n  }\r\n\r\n  &--small {\r\n    font-size: value('tag-small-font-size');\r\n  }\r\n\r\n  &--large {\r\n    font-size: value('tag-large-font-size');\r\n  }\r\n\r\n  &--circle {\r\n    @include define-preset-values(\r\n      'tag',\r\n      (\r\n        h-padding: 12px,\r\n        radius: 14px\r\n      )\r\n    );\r\n  }\r\n\r\n  &--disabled {\r\n    color: value('tag-color-disabled');\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  &__unit {\r\n    display: flex;\r\n    align-items: center;\r\n    max-width: 100%;\r\n    padding: value('tag-v-padding') value('tag-h-padding');\r\n    background-color: value('tag-bg-color');\r\n    border: value('border-shape') value('tag-b-color');\r\n    border-inline-start-color: value('tag-d-color');\r\n    border-inline-end-width: 0;\r\n    transition: value('transition-background'), value('transition-border');\r\n\r\n    &:first-child {\r\n      border-inline-start-color: value('tag-b-color');\r\n\r\n      @include logical-radius($radius null null $radius);\r\n    }\r\n\r\n    &:last-child {\r\n      border-inline-end-width: value('border-width');\r\n\r\n      @include logical-radius(null $radius $radius null);\r\n    }\r\n  }\r\n\r\n  &--disabled &__unit {\r\n    background-color: value('tag-bg-color-disabled');\r\n    border-color: value('tag-b-color-disabled');\r\n  }\r\n\r\n  &__close {\r\n    position: relative;\r\n    inset-inline-start: 3px;\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 12px;\r\n    padding: 0;\r\n    margin-inline-start: 4px;\r\n    color: value('tag-close-color');\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    border: 0;\r\n    outline: 0;\r\n    opacity: 60%;\r\n    transition: value('transition-opacity');\r\n\r\n    &:hover,\r\n    &:focus {\r\n      opacity: 100%;\r\n    }\r\n  }\r\n\r\n  &--disabled &__close {\r\n    &,\r\n    &:hover,\r\n    &:focus {\r\n      opacity: 50%;\r\n    }\r\n  }\r\n\r\n  $close: #{&}__close;\r\n\r\n  @each $type in $types {\r\n    &--#{$type} {\r\n      @include define-tag-style(\r\n        (\r\n          color: 'color-white',\r\n          bg-color: 'color' $type 'base',\r\n          b-color: 'color' $type 'base',\r\n          close-color: 'color-white',\r\n          d-color: 'color' $type 'light-3'\r\n        )\r\n      );\r\n    }\r\n\r\n    &--border#{&}--#{$type},\r\n    &--simple#{&}--#{$type} {\r\n      @include define-tag-style(\r\n        (\r\n          color: 'color' $type 'base',\r\n          close-color: 'color' $type 'base'\r\n        )\r\n      );\r\n    }\r\n\r\n    &--simple#{&}--#{$type} {\r\n      @include define-tag-style(\r\n        (\r\n          bg-color: 'color' $type 'opacity-8'\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  $preset-color-map: (\r\n    'lime': rgb(18 228 83),\r\n    'pink': rgb(240 101 149),\r\n    'magenta': rgb(235 47 150),\r\n    'tomato': rgb(250 99 99),\r\n    'orange': rgb(255 146 43),\r\n    'cyan': rgb(19 194 194),\r\n    'navy': rgb(47 65 224),\r\n    'gold': rgb(236 202 11),\r\n    'purple': rgb(114 46 209)\r\n  );\r\n\r\n  @each $name in map.keys($preset-color-map) {\r\n    $color: map.get($preset-color-map, $name);\r\n\r\n    @at-root {\r\n      &--#{$name} {\r\n        @include define-tag-style(\r\n          (\r\n            color: 'color-white',\r\n            close-color: 'color-white',\r\n            d-color: 'color' $color 'light-2'\r\n          )\r\n        );\r\n\r\n        @include define-css-var('tag-bg-color', $color);\r\n        @include define-css-var('tag-b-color', $color);\r\n        @include define-css-var('tag-d-color', color.mix($color-white, $color, 30%));\r\n      }\r\n\r\n      &--border#{&}--#{$name},\r\n      &--simple#{&}--#{$name} {\r\n        @include define-css-var('tag-color', $color);\r\n        @include define-css-var('tag-close-color', $color);\r\n      }\r\n\r\n      &--simple#{&}--#{$name} {\r\n        @include define-css-var('tag-bg-color', rgba($color, 20%));\r\n      }\r\n    }\r\n  }\r\n\r\n  &--border &__unit,\r\n  &--border#{&}--disabled &__unit {\r\n    background-color: transparent;\r\n  }\r\n}\r\n"
    }
  ]
}
